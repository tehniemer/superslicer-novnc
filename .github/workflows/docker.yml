name: Publish to ghcr.io

on:
  workflow_dispatch:
  push:
    # Publish semver tags as releases.
    tags: [ '*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for tags

      - name: Fetch all tags
        run: git fetch --tags

      - name: Extract latest Git tag
        run: echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      # Fail if no valid tag is found
      - name: Validate Git tag
        run: |
          if [ -z "${{ env.GIT_TAG }}" ]; then
            echo "ERROR: No valid Git tag found!"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the versioned Docker image
      - name: Build and push versioned Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}

      # Ensure the versioned image exists before tagging it as latest
      - name: Pull the pushed image to ensure it's available
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}

      # Tag and push latest
      - name: Tag and push latest
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
